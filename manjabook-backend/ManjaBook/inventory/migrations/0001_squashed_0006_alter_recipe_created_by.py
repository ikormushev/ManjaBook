# Generated by Django 5.1.1 on 2024-10-26 17:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('inventory', '0001_initial'), ('inventory', '0002_recipe_recipeproduct_recipe_products'), ('inventory', '0003_customunit_recipeproduct_custom_unit'), ('inventory', '0004_unit_is_customizable'), ('inventory', '0005_recipescollection'), ('inventory', '0006_alter_recipe_created_by')]

    initial = True

    dependencies = [
        ('accounts', '0002_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(1, 'Shop name must have at least 1 letter!')])),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(1)])),
                ('abbreviation', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(1)])),
                ('base_unit', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters')], default='g', max_length=2)),
                ('convert_to_base_rate', models.DecimalField(decimal_places=3, max_digits=7, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('is_customizable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nutrition_per', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters')], default='g', max_length=2)),
                ('calories', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Calories have to be more or equal to 0.'), django.core.validators.MaxValueValidator(1000, 'Calories have to be less than or equal to 1000.')])),
                ('protein', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)])),
                ('carbohydrates', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)])),
                ('sugars', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)])),
                ('fats', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(111.11)])),
                ('saturated_fats', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(111.11)])),
                ('salt', models.DecimalField(decimal_places=3, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fibre', models.DecimalField(decimal_places=2, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(3, 'Product name must have at least 3 letters!')])),
                ('brand', models.CharField(default='Basic', max_length=30, validators=[django.core.validators.MinLengthValidator(1)])),
                ('shopped_from', models.ManyToManyField(blank=True, related_name='products', to='inventory.shop')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3, 'Recipe name must have at least 3 letters!')])),
                ('quick_description', models.CharField(blank=True, max_length=100, null=True)),
                ('portions', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('time_to_cook', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('time_to_prepare', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('preparation', models.TextField()),
                ('slug', models.SlugField(editable=False, max_length=100, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes-images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_edit_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calories', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('carbohydrates', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('sugars', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('fats', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('saturated_fats', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('salt', models.DecimalField(blank=True, decimal_places=3, editable=False, max_digits=6, null=True)),
                ('fibre', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_recipes', to='inventory.product')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_products', to='inventory.recipe')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_products', to='inventory.unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='recipes', through='inventory.RecipeProduct', to='inventory.product'),
        ),
        migrations.CreateModel(
            name='CustomUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_convert_to_base_rate', models.DecimalField(decimal_places=3, max_digits=7, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.unit')),
            ],
            options={
                'unique_together': {('unit', 'custom_convert_to_base_rate')},
            },
        ),
        migrations.AddField(
            model_name='recipeproduct',
            name='custom_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipe_products_custom', to='inventory.customunit'),
        ),
        migrations.CreateModel(
            name='RecipesCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(3)])),
                ('image', models.ImageField(blank=True, default='common/default-collections-photo.png', null=True, upload_to='recipes-collections-images/')),
                ('is_private', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='accounts.profile')),
                ('recipes', models.ManyToManyField(blank=True, related_name='collections', to='inventory.recipe')),
            ],
        ),
        migrations.AlterField(
            model_name='recipe',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.profile'),
        ),
    ]
